name: Build & Release - All supported platforms

on:
  push:
    tags:
      - '*'

jobs:
  job_1:
    name: Linux + gnu ( x86_64-unknown-linux-gnu )
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: main
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            target: x86_64-unknown-linux-gnu
            components: rustfmt, clippy
      - name: cargo build
        shell: bash
        run: |
          cd /home/runner/work/rex-dev-server/rex-dev-server/main && cargo build --release --target x86_64-unknown-linux-gnu
      - name: Results
        uses: actions/upload-artifact@v3
        with:
          name: rexds_${{ github.ref_name }}_x86-64-unknown-linux-gnu
          path: /home/runner/work/rex-dev-server/rex-dev-server/main/target/x86_64-unknown-linux-gnu/release/rexds
  
  # job_2: 
  #   name: Linux ARM64 musl
  #   runs-on: ubuntu-latest
  #   env:
  #     RUSTFLAGS: -C linker=musl-gcc
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         path: main
  #     - name: Install Rust Toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #           toolchain: stable
  #           target: aarch64-unknown-linux-musl
  #           components: rustfmt, clippy
  #     - name: musl tools
  #       shell: bash
  #       run: sudo apt-get update && sudo apt-get install musl-tools
  #     - name: cargo build
  #       shell: bash
  #       run: |
  #         cd /home/runner/work/rex-dev-server/rex-dev-server/main && cargo build --release --target aarch64-unknown-linux-musl
  #     - name: Results
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: Linux-ARM64-musl
  #         path: /home/runner/work/rex-dev-server/rex-dev-server/main/target/aarch64-unknown-linux-musl/release/rexds

  job_3:
    name: Linux + musl ( x86_64-unknown-linux-musl )
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -C linker=musl-gcc
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: main
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            target: x86_64-unknown-linux-musl
            components: rustfmt, clippy
      - name: musl tools
        shell: bash
        run: sudo apt-get update && sudo apt-get install musl-tools
      - name: cargo build
        shell: bash
        run: |
          cd /home/runner/work/rex-dev-server/rex-dev-server/main && cargo build --release --target x86_64-unknown-linux-musl
      - name: Results
        uses: actions/upload-artifact@v3
        with:
          name: rexds_${{ github.ref_name }}_x86-64-unknown-linux-musl
          path: /home/runner/work/rex-dev-server/rex-dev-server/main/target/x86_64-unknown-linux-musl/release/rexds

  job_4:
    name: Windows ( x86_64-pc-windows-msvc )
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: main
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            target: x86_64-pc-windows-msvc
            components: rustfmt, clippy
      - name: cargo build
        shell: bash
        run: |
          cd D:/a/rex-dev-server/rex-dev-server/main && cargo build --release --target x86_64-pc-windows-msvc
      - name: Results
        uses: actions/upload-artifact@v3
        with:
          name: rexds_${{ github.ref_name }}_x86-64-pc-windows-msvc
          path: D:/a/rex-dev-server/rex-dev-server/main/target/x86_64-pc-windows-msvc/release/rexds.exe

  job_5:
    name: macOS ( x86_64-apple-darwin )
    runs-on: macOS-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: main
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            target: aarch64-apple-darwin
            components: rustfmt, clippy
      - name: cargo build
        shell: bash
        run: |
          cd /Users/runner/work/rex-dev-server/rex-dev-server/main && cargo build --release --target x86_64-apple-darwin
      - name: Results
        uses: actions/upload-artifact@v3
        with:
          name: rexds_${{ github.ref_name }}_x86-64-apple-darwin
          path: /Users/runner/work/rex-dev-server/rex-dev-server/main/target/x86_64-apple-darwin/release/rexds

  job_6:
    name: macOS ( aarch64-apple-darwin )
    runs-on: macOS-latest 
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: main
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            target: aarch64-apple-darwin
            components: rustfmt, clippy
      - name: cargo build
        shell: bash
        run: |
          cd /Users/runner/work/rex-dev-server/rex-dev-server/main && cargo build --release --target aarch64-apple-darwin
      - name: Results
        uses: actions/upload-artifact@v3
        with:
          name: rexds_${{ github.ref_name }}_aarch64-apple-darwin
          path: /Users/runner/work/rex-dev-server/rex-dev-server/main/target/aarch64-apple-darwin/release/rexds
